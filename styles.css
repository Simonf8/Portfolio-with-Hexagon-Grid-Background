:root {
  --primary-color: #2196f3;
  --background-color: #000;
  --accent-color: #4ecdc4;
  --highlight-color: #ff6b6b;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Arial', sans-serif;
}

body {
  background-color: var(--background-color);
  color: white;
  font-family: Arial, sans-serif;
  position: relative;
  min-height: 100vh;
  overflow-x: hidden;
}

body::before {
  content: '';
  position: fixed;
  top: 50%;
  left: 50%;
  width: 600px;
  height: 600px;
  transform: translate(-50%, -50%);
  background: none;
  border: 2px solid var(--primary-color);
  transition: all 0.5s;
  animation: rotate 4s linear infinite;
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
  opacity: 0;
  z-index: -1;
}

body:hover::before {
  opacity: 0.2;
  width: 800px;
  height: 800px;
}

@keyframes rotate {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
  position: relative;
  z-index: 2;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(10px);
  border-radius: 15px;
  margin: 20px auto;
}

header {
  text-align: center;
  margin-bottom: 4rem;
  padding: 2rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  position: relative;
  overflow: hidden;
}

header h1 {
  font-size: 3rem;
  margin-bottom: 1rem;
  background: linear-gradient(45deg, var(--highlight-color), var(--accent-color));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  position: relative;
  display: inline-block;
}

header h1::after {
  content: '|';
  position: absolute;
  right: -15px;
  opacity: 0;
  animation: blink 0.7s infinite;
}

header h1.typing-complete::after {
  opacity: 1;
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

header p {
  position: relative;
  display: inline-block;
  color: rgba(255, 255, 255, 0.8);
  transition: all 0.3s ease;
  padding: 5px 10px;
}

header p::before {
  content: '';
  position: absolute;
  width: 0;
  height: 100%;
  top: 0;
  left: 0;
  background: linear-gradient(90deg, rgba(78, 205, 196, 0.1), rgba(255, 107, 107, 0.1));
  transition: width 0.5s ease;
  z-index: -1;
}

header:hover p::before {
  width: 100%;
}

section {
  margin-bottom: 4rem;
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.8s ease, transform 0.8s ease;
}

.reveal-visible {
  opacity: 1;
  transform: translateY(0);
}

.projects {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

/* Hexagon Border Hover Effect */
.hex-container {
  position: relative;
  margin: 2rem 0;
  padding: 2rem;
  transition: all 0.3s ease;
}

.project-card, .about, .skills, .contact {
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 10px;
  padding: 2rem;
  position: relative;
  transition: all 0.3s ease;
  z-index: 1;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.hex-border {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: none;
  border: 2px solid var(--primary-color);
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
  opacity: 0;
  transition: all 0.3s ease;
}

.hex-container:hover .hex-border {
  opacity: 1;
  transform: scale(1.05);
}

.hex-container:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
}

.hover-active .hex-border {
  opacity: 1;
}

.project-card h2 {
  margin-bottom: 1rem;
  color: #4ecdc4;
}

.project-links {
  margin-top: 1.5rem;
  display: flex;
  gap: 1rem;
}

.project-links a {
  color: var(--highlight-color);
  text-decoration: none;
  transition: all 0.3s ease;
  position: relative;
  padding: 5px 10px;
  border-radius: 4px;
  overflow: hidden;
  display: inline-block;
  z-index: 1;
}

.project-links a::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: linear-gradient(90deg, rgba(78, 205, 196, 0.1), rgba(255, 107, 107, 0.1));
  transition: width 0.3s ease;
  z-index: -1;
}

.project-links a:hover::before {
  width: 100%;
}

.project-links a:hover {
  color: var(--accent-color);
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.project-links a::after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: 0;
  left: 0;
  background-color: var(--accent-color);
  transition: width 0.3s ease;
}

.project-links a:hover::after {
  width: 100%;
}

.about h2, .skills h2, .contact h2 {
  margin-bottom: 1.5rem;
  color: #4ecdc4;
}

.skill-list {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.skill {
  background-color: rgba(255, 255, 255, 0.1);
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.9rem;
  transition: all 0.5s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

.skill:hover {
  transform: translateY(-5px) scale(1.05);
  box-shadow: 0 5px 15px rgba(78, 205, 196, 0.4), 0 0 20px rgba(78, 205, 196, 0.2);
  color: #fff;
  font-weight: bold;
}

.skill::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, var(--highlight-color), var(--accent-color));
  z-index: -1;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  opacity: 0;
  transition: opacity 0.5s ease;
}

.skill:hover::before {
  opacity: 1;
  animation: rotate 3s linear infinite;
}

.contact-links {
  margin-top: 1.5rem;
  display: flex;
  flex-wrap: wrap;
  gap: 1.5rem;
}

.contact-links a {
  color: var(--highlight-color);
  text-decoration: none;
  transition: all 0.3s ease;
  position: relative;
  padding: 5px 10px;
  border-radius: 4px;
  overflow: hidden;
  display: inline-block;
  z-index: 1;
}

.contact-links a::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: linear-gradient(90deg, rgba(78, 205, 196, 0.1), rgba(255, 107, 107, 0.1));
  transition: width 0.3s ease;
  z-index: -1;
}

.contact-links a:hover::before {
  width: 100%;
}

.contact-links a:hover {
  color: var(--accent-color);
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.contact-links a::after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: 0;
  left: 0;
  background-color: var(--accent-color);
  transition: width 0.3s ease;
}

.contact-links a:hover::after {
  width: 100%;
}

/* Alternative Hexagon Method */
.hexagon {
  position: relative;
  width: 100px;
  height: 57.74px;
  background-color: rgba(255, 255, 255, 0.05);
  margin: 28.87px auto;
  display: inline-block;
  transition: all 0.3s ease;
}

.hexagon::before,
.hexagon::after {
  content: "";
  position: absolute;
  width: 0;
  border-left: 50px solid transparent;
  border-right: 50px solid transparent;
  transition: all 0.3s ease;
}

.hexagon::before {
  bottom: 100%;
  border-bottom: 28.87px solid rgba(255, 255, 255, 0.05);
}

.hexagon::after {
  top: 100%;
  border-top: 28.87px solid rgba(255, 255, 255, 0.05);
}

.hexagon:hover {
  background-color: rgba(78, 205, 196, 0.3);
}

.hexagon:hover::before {
  border-bottom-color: rgba(78, 205, 196, 0.3);
}

.hexagon:hover::after {
  border-top-color: rgba(78, 205, 196, 0.3);
}

/* Add new styles for hexagon background */
.hex-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  overflow: hidden;
}

.row {
  display: inline-flex;
  margin-top: -32px;
  margin-left: -50px;
}

.row:nth-child(even) {
  margin-left: 1px;
}

.hexagon-bg {
  position: relative;
  width: 50px;
  height: 30px;
  background-color: rgba(33, 150, 243, 0.05);
  margin: 2px;
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
  transition: all 0.3s ease;
}

.hexagon-bg::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, var(--highlight-color), var(--accent-color));
  opacity: 0;
  transition: opacity 0.3s ease;
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
}

.hex-active::before {
  opacity: 0.7;
  animation: pulse 1s infinite alternate;
}

.hex-ripple::before {
  opacity: 0.3;
  animation: ripple 0.5s ease-out;
}

@keyframes pulse {
  0% { transform: scale(1); opacity: 0.7; }
  100% { transform: scale(1.1); opacity: 0.9; }
}

@keyframes ripple {
  0% { transform: scale(1); opacity: 0.3; }
  50% { transform: scale(1.2); opacity: 0.5; }
  100% { transform: scale(1); opacity: 0; }
}

/* Enhanced Hover Effects */
.project-card::before, .about::before, .skills::before, .contact::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, rgba(255, 107, 107, 0.1), rgba(78, 205, 196, 0.1));
  opacity: 0;
  transition: opacity 0.5s ease;
  z-index: -1;
}

.hex-container:hover .project-card::before,
.hex-container:hover .about::before,
.hex-container:hover .skills::before,
.hex-container:hover .contact::before {
  opacity: 1;
}

.hex-container:hover .project-card,
.hex-container:hover .about,
.hex-container:hover .skills,
.hex-container:hover .contact {
  transform: translateY(-10px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
}

/* Glowing Effect for Skills */
.skill {
  background-color: rgba(255, 255, 255, 0.1);
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.9rem;
  transition: all 0.5s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

.skill:hover {
  transform: translateY(-5px) scale(1.05);
  box-shadow: 0 5px 15px rgba(78, 205, 196, 0.4), 0 0 20px rgba(78, 205, 196, 0.2);
  color: #fff;
  font-weight: bold;
}

.skill::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, var(--highlight-color), var(--accent-color));
  z-index: -1;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  opacity: 0;
  transition: opacity 0.5s ease;
}

.skill:hover::before {
  opacity: 1;
  animation: rotate 3s linear infinite;
}

/* Enhanced Link Animations */
.project-links a, .contact-links a {
  color: var(--highlight-color);
  text-decoration: none;
  transition: all 0.3s ease;
  position: relative;
  padding: 5px 10px;
  border-radius: 4px;
  overflow: hidden;
  display: inline-block;
  z-index: 1;
}

.project-links a::before, .contact-links a::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: linear-gradient(90deg, rgba(78, 205, 196, 0.1), rgba(255, 107, 107, 0.1));
  transition: width 0.3s ease;
  z-index: -1;
}

.project-links a:hover::before, .contact-links a:hover::before {
  width: 100%;
}

.project-links a:hover, .contact-links a:hover {
  color: var(--accent-color);
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.project-links a::after, .contact-links a::after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: 0;
  left: 0;
  background-color: var(--accent-color);
  transition: width 0.3s ease;
}

.project-links a:hover::after, .contact-links a:hover::after {
  width: 100%;
}

/* Enhanced Header Animation */
header::before {
  content: '';
  position: absolute;
  width: 200%;
  height: 2px;
  bottom: 0;
  left: -50%;
  background: linear-gradient(90deg, transparent, var(--accent-color), var(--highlight-color), transparent);
  animation: headerBorder 4s linear infinite;
}

@keyframes headerBorder {
  0% { transform: translateX(-30%); }
  100% { transform: translateX(30%); }
}

/* Responsive design */
@media (max-width: 768px) {
  .projects {
    grid-template-columns: 1fr;
  }
  
  header h1 {
    font-size: 2rem;
  }
  
  .contact-links {
    flex-direction: column;
  }
}

/* Particle Canvas */
#particle-canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2;
  pointer-events: none;
}

/* Typing Text Animation */
.typing-text {
  min-height: 24px;
  margin-top: 10px;
  font-size: 1.2rem;
  color: rgba(255, 255, 255, 0.8);
  position: relative;
  display: inline-block;
}

.typing-text::after {
  content: '|';
  position: absolute;
  right: -8px;
  animation: blink 0.7s infinite;
}

.subtitle {
  margin-bottom: 5px;
  font-weight: bold;
  background: linear-gradient(45deg, var(--highlight-color), var(--accent-color));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  display: inline-block;
}